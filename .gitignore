# Update: Xinyu Yan, 2025-06-25
# TL;DR: This file is used to ignore the files that are not needed to be tracked by git

# Customized .gitignore
.github/
log*/
unity*/
cache*/
data*/
eval*/
hf_cache*/
notebook*/
output*/
saves*/
wandb*/
memory_log.txt

# Byte-Compiled / Optimized / DLL Files
__pycache__/
*$py.class
*.py[cod]
eval_dumps/
eval_logs/

# C Extensions
*.so

# Distribution / Packaging
.Python
.installed.cfg
.eggs/
.egg-info/
build/
develop-eggs/
dist/
downloads/
eggs/
lib/
lib64/
MANIFEST
parts/
sdist/
share/python-wheels/
var/
wheels/
*.egg

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer Logs
pip-delete-this-directory.txt
pip-log.txt

# Unit Test / Coverage Reports
.coverage
.coverage.*
.hypothesis/
.nox/
.pytest_cache/
.ruff_cache/
.tox/
.cache
cover/
coverage.xml
htmlcov/
nosetests.xml
*.cover
*.py,cover

# Translations
*.mo
*.pot

# Django Stuff:
*.log
db.sqlite3
db.sqlite3-journal
local_settings.py

# Flask Stuff:
instance/
.webassets-cache

# Scrapy Stuff:
.scrapy

# Sphinx Documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
ipython_config.py
profile_default/

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery Stuff
celerybeat-schedule
celerybeat.pid

# SageMath Parsed Files
*.sage.py

# Environments
.env
.venv
ENV/
env/
env.bak/
venv/
venv.bak/

# Spyder Project Settings
.spyderproject
.spyproject

# Rope Project Settings
.ropeproject

# Mkdocs Documentation
/site

# Mypy
.dmypy.json
.mypy_cache/
dmypy.json

# Pyre Type Checker
.pyre/

# Pytype Static Type Analyzer
.pytype/

# Cython Debug Symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
.idea/

# Visual Studio Code
.vscode/